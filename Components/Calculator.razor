
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage;

@inherits LayoutComponentBase


<div>
    <h1>Cálculo de IMC</h1>
</div>
<EditForm Model="@_model" OnValidSubmit="@OnValidSubmitAsync" OnInvalidSubmit="@OnInvalidSubmitAsync">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>
    @if (_message != string.Empty)
    {
        <p>@_message</p>
    }
    <div class="mb" >
        <InputNumber class="form-input" id="Altura" placeholder="Altura" step="0.01" @bind-Value="_model.Height" />
@*             <span class="form-input-invalid">
            <ValidationMessage For="@(() => _mode.Height)"/>
        </span>  *@   
    </div>
    <div class ="mb">
        <InputNumber class="form-input" id="Peso" @bind-Value="_model.Weight" placeholder="Peso" />
    </div>
@*         <div>
        <select class="input-text" @bind="_model.Sex">
            <option>Selecione o Sexo</option>
            <option value=@ESex.Male>Masculino</option>
            <option value=@ESex.female>Feminino</option>
        </select>
    </div> *@

@*     <div class="checkbox-container">
        <input class="checkbox" type="checkbox" id="age" @bind-value="_model.IsElderly" />
        <label class="checkbox-label" for="age">Eu tenho 65 anos ou mais</label><br>    
    </div> *@
    <div class="flex flex-center">
        <button class="btn btn-filled btn-auto mb" type="submit">Calcular meu IMC</button>
        <a class="btn btn-link" href="#slide-about">
            Entenda o cálculo
        </a>
    </div>
</EditForm>

<Dialog Id="modal" @ref="_dialog" OnModalCloseCallback="@CloseModalAsync">
    @if (_model.Imc < 18.6)
    {
        <h1>Abaixo do peso ⚠️</h1>
        <p>Você está abaixo do peso indicado, siga as recomendações do seu nutricionista para chegar lá.</p>
    }
    else if (_model.Imc >= 18.6 && _model.Imc <= 24.9)
    {
        <h1>Peso ideal ✅</h1>
        <p>Parabéns! Você está na faixa de peso ideal, continue assim.</p>
    }
    else if (_model.Imc >= 24.9)
    {
        <h1>Sobrepeso 🔴</h1>
        <p>Você está acima do peso indicado, siga as recomendações do seu nutricionista para chegar lá.</p>
    }
</Dialog>



@code {
    private ImcModel _model = new();
    private Dialog _dialog = null!;
    private string _message = string.Empty;

    private async Task OnValidSubmitAsync()
    {
        _message = string.Empty;
        await ShowModalAsync();
    }

    private void OnInvalidSubmitAsync()
    {
        _message = "Dados invalidos";
    }

    private async Task ShowModalAsync() => await _dialog.ShowModalAsync();


    private async Task CloseModalAsync()
    {
        AppState.History.Add(_model);
        AppState.UpdateView();
        await LocalStorage.SetItemAsync("data", AppState.History);
        await AppState.NotifyChanges(_model, null);

        _model = new();
    }

    //public EventCallback<PersonData> Calculation { get; set; }
}
