@page "/historic"
@using Imc.ViewModels
@using Imc.Repositories
@inject ILocalStorageService LocalStorage

<div class="logo-container">
    <img src="icon-no-bg.png" alt="logo" class="logo">
</div>
<header class="PageHeader">
    <span>Histórico</span>
</header>
<main>
    <div class="content">
        <input type="text" class="search" placeholder="Digite a busca..." @bind-value="searchText" @oninput="HandleInput">
        <div>
            <button class="button-secondary white-background" @onclick="Search">Pesquisar</button>
        </div>
        <section class="section-history">
            <table class="tableHistory">
                @foreach (var imc in filteredHistoric)
                {
                    <tr class="rowHistory">
                        <td>
                            <div class="icon-cell"></div>
                        </td>
                        <td class="table-data">
                            <div class="textTitle">@imc.Title</div>
                            <div class="textDate">@imc.FormattedRegistered</div>
                            <div class="textDescription ">@imc.Description</div>
                        </td>
                    </tr>
                }
            </table>
        </section>
    </div>
</main>



@code {
    private List<IMCViewModel> historic = new();
    private List<IMCViewModel> filteredHistoric = new();
    private string searchText ;

    protected override void OnInitialized()
    {
        var imcResultRepository = new LocalStorageRepository(LocalStorage);
        historic = imcResultRepository.Get();
        filteredHistoric = historic;
    }

    private void Search()
    {
        string searchTextLower = searchText.ToLower();
        filteredHistoric = historic.Where(item => item.Title.ToLower().Contains(searchTextLower)).ToList();
    }

    private void HandleInput(ChangeEventArgs e)
    {
        string searchTextLower = searchText.ToLower();
        filteredHistoric = historic.Where(item => item.Title.ToLower().Contains(searchTextLower)).ToList();
    }
}
